<script lang="ts" setup>
	import { showToast } from '@web/utils/toast'
	import { {% up@[name] %}Dto, {% up@[name] %}Model, create{% up@[name] %}, update{% up@[name] %} } from './{% name %}'
	import { pickerKeyVal } from '@web/utils/pickerKeyVal'

	const props = defineProps<{ {% name %}: {% up@[name] %}Model | null; showForm: boolean }>()
	const {% name %}Id = ref(-1)
	const {% name %}Info = ref<Partial<{% up@[name] %}Dto>>({})

	watchEffect(async () => {
		if (props.{% name %} !== null) {
			{% name %}Id.value = props.{% name %}.id
			{% name %}Info.value = pickerKeyVal(props.{% name %}, 'age', 'name', 'score')
		}
	})

	const userFormEmit = defineEmits<{ (e: 'close', refresh: boolean): void }>()

	const closeHandler = (refresh = false) => {
		userFormEmit('close', refresh)
		setTimeout(() => {
			{% name %}Id.value = -1
			{% name %}Info.value = {}
		}, 100)
	}

	const updateFn = async () => {
		if (props.{% name %} === null) {
			{% verifyHandler %}
			await create{% up@[name] %}({% name %}Info.value as {% up@[name] %}Dto)
		} else {
			await update{% up@[name] %}({% name %}Info.value, props.{% name %}.id)
		}
		closeHandler(true)
	}
</script>
<template>
	<el-dialog
		:model-value="showForm"
		:title="props.{% name %} === null ? '添加{% comment %}' : '编辑{% comment %}'"
		@close="closeHandler()"
		class="form-container"
		lock-scroll
	>
		<el-form ref="formRef" :model="{% name %}Info" label-width="120px" class="form-detail">
			{% formItemStr %}
		</el-form>
		<template #footer>
			<div class="form-form-footer">
				<el-button @click="updateFn()" type="primary">保存</el-button>
				<el-button @click="closeHandler()" type="info">取消</el-button>
			</div>
		</template>
	</el-dialog>
</template>
<style lang="scss" scoped>
	@import '@web/style/form.scss';
</style>
